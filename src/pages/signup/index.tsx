import Link from 'next/link'
import React from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useState, useEffect, useRef, useCallback, useContext } from 'react'
import { supabase } from '../../components/supabase'
import styles from '../../styles/Login.module.css'
import { InferGetStaticPropsType, GetStaticPropsContext } from 'next'
import IconTwitter from '../img/icon_twitter.svg'
import IconLine from '../img/line.svg'
import Mail from '../img/mail.svg'
import Yahoo from '../img/yahoo.png'
import Password from '../img/password.svg'
import Google from '../img/google.svg'
import Navbar from '../../components/Navber'
import Image from 'next/image'
import { AuthContext } from '../../components/auth/AuthContext'

type Props = InferGetStaticPropsType<typeof getStaticProps>

type Signup = {
  name: string
  birth_year: number
  birth_month: number
  gender: number
  sign_up: boolean
}

export const getStaticProps = async (context: GetStaticPropsContext) => {
  const data = 'テスト'

  return {
    props: { data },
  }
}

const LoginGate = (data: Props) => {
  const { user, session, signOut }: any = useContext(AuthContext)
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const login = async () => {
    const { error, data } = await supabase.auth.signIn({ email, password })
    if (error) {
      console.log({ error })
    } else {
      console.log({ data })
    }
  }

  const signup = async () => {
    const { error } = await supabase.auth.signUp({ email, password })
    if (error) {
      console.log({ error })
    } else {
      console.log({ data })
    }
  }

  const [selectLogin, setSelectLogin] = useState([
    styles.select_login_active,
    styles.select_register,
    styles.select_underbar_login,
  ])

  const changeSelectLogin = (select: string) => {
    if (select == 'register') {
      const newSelectLogin = [
        styles.select_login,
        styles.select_register_active,
        styles.select_underbar_register,
      ]
      setSelectLogin(newSelectLogin)
    } else if (select == 'login') {
      const newSelectLogin = [
        styles.select_login_active,
        styles.select_register,
        styles.select_underbar_login,
      ]
      setSelectLogin(newSelectLogin)
    }
  }

  return (
    <>
      <Head>
        <title>Goodsist イベントのグッズ代が計算できるWEBアプリ</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width,initial-scale=1.0,maximum-scale=1.0' />
        <link rel='icon' href='/favicon.ico' />
        <link
          href='https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap&text=Goodsist'
          rel='stylesheet'
        />
      </Head>

      <Navbar />
      <main className={styles.main}>
        <div className={styles.content_title}>
          <span>新規登録{user ? user.user_name : ''}</span>
        </div>
        <div className={styles.card}>
          <div className={styles.terms}>全ての項目を入力し、登録を完了してください。</div>

          <div className={styles.form_container}>
            {email}
            <div className={styles.input_name_container}>
              <div className={styles.input_label}>お名前</div>
              <input
                className={styles.input_mail}
                type='text'
                name='name'
                placeholder='ニックネーム'
                onChange={(e) => setEmail(e.target.value)}
              />
            </div>
            <div className={styles.input_error}></div>
            <div className={styles.notes}>10文字以内。</div>
            <hr className={styles.space_bar} />
            <div className={styles.birth_gender_container}>
              <div className={styles.input_label}>誕生年月</div>
              <div className={styles.birth_gender}>
                <span className={styles.select_arrow}>
                  <select className={styles.input_select_active}>
                    <option value='1990'>1990年</option>
                    <option value='1991'>1991年</option>
                  </select>
                </span>

                <select className={styles.input_select}>
                  <option value='---'>---</option>
                  <option value='1'>01月</option>
                </select>
              </div>
            </div>
            <div className={styles.input_error}></div>
            <div className={styles.notes}>パスワードを忘れた時や退会時に必要です。</div>
            <hr className={styles.space_bar} />
            <div className={styles.birth_gender_container}>
              <div className={styles.input_label}>性別</div>
              <div className={styles.birth_gender}>
                <label className={styles.input_radio}>女</label>
                <label className={styles.input_radio}>男</label>
                <label className={styles.input_radio}>その他</label>
              </div>
            </div>
            <div className={styles.input_error}></div>
            <div className={styles.notes}></div>
            <hr className={styles.space_bar} />
            <button className={styles.btn_login_mail} onClick={() => signup()}>
              登録を完了する
              <span>
                <Mail />
              </span>
            </button>
            <div className={styles.refuse}>登録をやめる</div>
          </div>
        </div>
      </main>
    </>
  )
}

export default LoginGate
