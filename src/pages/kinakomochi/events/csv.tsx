import { useRouter } from 'next/router'
import { supabase } from '../../../components/supabase'
import Link from 'next/link'
import styles from '../../../styles/Admin.module.css'
import Title from '../../../components/view/title'
import Head from 'next/head'
import { GetServerSideProps } from 'next'
import InputText from '../../../components/form/InputText'
import InputLabel from '../../../components/form/InputLabel'
import SubmitButton from '../../../components/form/SubmitButton'
import { useEffect, useState } from 'react'
import AdminHeader from '../../../components/admin/Header'
import AdminLogin from '../../../components/admin/login'
import { Contents } from '../../../components/types'
import { GetStaticPropsContext } from 'next'
import { useCsvEvents } from '../../../components/hooks/admin/useCsvEvents'

type newEvent = {
  content_id: number
  event_name: string
  date: string
  url?: string
  content_id2?: number
  content_id3?: number
}

// ページコンポーネントに渡されるデータ
type Props = {
  contents: Contents[]
}

export const getServerSideProps: GetServerSideProps = async (context: GetStaticPropsContext) => {
  return { props: {} }
}
export default function Admin({}: Props) {
  const router = useRouter()

  const [csvDragDrop, events] = useCsvEvents()
  const [renderEvents, setRenderEvents] = useState<JSX.Element>(<></>)

  useEffect(() => {
    console.log(events)
    if (events.length > 0) renderCsvEvents()
  }, [events])

  const register = async () => {
    events.map((event: newEvent) => {
      registerEvents(event)
    })
    router.push({
      pathname: '/kinakomochi/events', //URL
    })
    alert('登録完了')
  }

  const registerEvents = async (event: newEvent) => {
    const { data, error } = await supabase.from('events').insert([
      {
        content_id: event.content_id,
        event_name: event.event_name,
        date: event.date,
        url: event.url,
        content_id2: event.content_id2,
        content_id3: event.content_id3,
      },
    ])

    if (error) {
      console.log(error)
    } else {
      // alert('登録完了')
    }
  }

  const renderCsvEvents = () => {
    const viewEvents = (
      <>
        <ul>
          {events.map((event: newEvent, index: number) => (
            <li>
              {event.content_id} {event.event_name} {event.date} {event.url} {event.content_id2}{' '}
              {event.content_id3}
            </li>
          ))}
        </ul>
        <SubmitButton title='登録' isSubmit={true} onClick={register} />
      </>
    )
    setRenderEvents(viewEvents)
  }

  return (
    <>
      <Head>
        <title>Goods List 管理者ログイン</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width,initial-scale=1.0,maximum-scale=1.0' />
        <link rel='icon' href='/favicon.ico' />
        <link
          href='https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap&text=Goodsist'
          rel='stylesheet'
        />
        <link
          href='https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'
          rel='stylesheet'
        ></link>
      </Head>
      <AdminHeader />
      <div className={styles.wrapper_white}>
        <Title title='イベントCSV新規登録' />
        {/* <ContentsCSVReader /> */}
        {csvDragDrop}
        {renderEvents}
      </div>
    </>
  )
}
