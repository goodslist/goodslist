import Link from 'next/link'
import React from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useState, useEffect, useRef, useCallback, useContext } from 'react'
import { supabase } from '../../components/supabase'
import styles from '../../styles/Login.module.css'
import { InferGetStaticPropsType, GetStaticPropsContext } from 'next'
import IconTwitter from '../img/icon_twitter.svg'
import IconLine from '../img/line.svg'
import Mail from '../img/mail.svg'
import Yahoo from '../img/yahoo.png'
import Password from '../img/password.svg'
import Google from '../img/google.svg'
import Navbar from '../../components/Navber'
import Image from 'next/image'
import { AuthContext } from '../../components/auth/AuthContext'

type Props = InferGetStaticPropsType<typeof getStaticProps>

type LoginKey = {
  email: string
  password: string
}

export const getStaticProps = async (context: GetStaticPropsContext) => {
  const data = 'テスト'

  return {
    props: { data },
  }
}

const LoginGate = (data: Props) => {
  const { user, session, signOut }: any = useContext(AuthContext)
  //ログインか新規登録かのフラグ
  const [isLogin, setIsLogin] = useState(true)
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const login = async () => {
    const { error, data } = await supabase.auth.signIn({ email, password })
    if (error) {
      console.log({ error })
    } else {
      console.log({ data })
    }
  }

  const signup = async () => {
    const { error } = await supabase.auth.signUp({ email, password })
    if (error) {
      console.log({ error })
    } else {
      console.log({ data })
    }
  }

  const changeSelectLogin = (select: string) => {
    if (select == 'register') {
      setIsLogin(false)
    } else if (select == 'login') {
      setIsLogin(true)
    }
  }

  return (
    <>
      <Head>
        <title>Goodsist イベントのグッズ代が計算できるWEBアプリ</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width,initial-scale=1.0,maximum-scale=1.0' />
        <link rel='icon' href='/favicon.ico' />
        <link
          href='https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap&text=Goodsist'
          rel='stylesheet'
        />
      </Head>

      <Navbar />
      <main className={styles.main}>
        <div className={styles.content_title}>
          <span>ログイン / 新規登録{user ? user.user_name : ''}</span>
        </div>
        <div className={styles.card}>
          <div className={styles.select_login_container}>
            <button
              className={isLogin ? styles.select_login_active : styles.select_login}
              onClick={() => changeSelectLogin('login')}
            >
              ログイン
            </button>
            <button
              className={isLogin ? styles.select_register : styles.select_register_active}
              onClick={() => changeSelectLogin('register')}
            >
              {/* <Link href={'/signup'}>
                <a>新規登録</a>
              </Link> */}
              新規登録
            </button>
          </div>
          <div className={styles.select_underbar_container}>
            <div
              className={isLogin ? styles.select_underbar_login : styles.select_underbar_register}
            ></div>
          </div>
          <div className={isLogin ? styles.login_container_active : styles.login_container}>
            <div className={styles.form}>
              <button className={styles.btn_login_twitter}>
                Twitterでログイン
                <span>
                  <IconTwitter />
                </span>
              </button>
              <button className={styles.btn_login_line}>
                LINEでログイン
                <span>
                  <IconLine />
                </span>
              </button>
              <button className={styles.btn_login_yahoo}>
                Yahoo! JAPANでログイン
                <span>
                  <img src='../../images/yahoo.png' width='35px' height='35px' />
                </span>
              </button>
              <button className={styles.btn_login_google}>
                Googleでログイン
                <span>
                  <img src='../../images/google.svg' width='26px' height='26px' />
                </span>
              </button>
            </div>
            <hr className={styles.bar_login} />

            <div className={styles.form}>
              <span className={styles.input_mail_container}>
                <input
                  className={styles.input_mail}
                  type='text'
                  name='email'
                  placeholder='メールアドレス'
                  onChange={(e) => setEmail(e.target.value)}
                />
                <span>
                  <Mail />
                </span>
              </span>
              <div className={styles.input_error}></div>
              <span className={styles.input_password_container}>
                <input
                  className={styles.input_password}
                  type='password'
                  name='password'
                  placeholder='パスワード'
                  onChange={(e) => setPassword(e.target.value)}
                />
                <span>
                  <Password />
                </span>
              </span>
              <div className={styles.input_error}>
                アルファベットと数字の組み合わせで8文字以上が必要です。
              </div>
              <div className={styles.forgot_password} onClick={() => signOut()}>
                パスワードを忘れた場合
              </div>
              <button className={styles.btn_login_mail} onClick={() => login()}>
                メールアドレスでログイン
                <span>
                  <Mail />
                </span>
              </button>
              <button className={styles.btn_login_mail} onClick={() => signup()}>
                メールアドレスで登録
                <span>
                  <Mail />
                </span>
              </button>
            </div>
          </div>

          <div className={isLogin ? styles.signup_container : styles.signup_container_active}>
            <div className={styles.form}>
              <span className={styles.input_mail_container}>
                <input
                  className={styles.input_mail}
                  type='text'
                  name='email'
                  placeholder='メールアドレス'
                  onChange={(e) => setEmail(e.target.value)}
                />
                <span>
                  <Mail />
                </span>
              </span>
              <div className={styles.input_error}></div>
              <span className={styles.input_password_container}>
                <input
                  className={styles.input_password}
                  type='password'
                  name='password'
                  placeholder='パスワード'
                  onChange={(e) => setPassword(e.target.value)}
                />
                <span>
                  <Password />
                </span>
              </span>
              <div className={styles.input_error}>
                アルファベットと数字の組み合わせで8文字以上が必要です。
              </div>
              <div className={styles.forgot_password} onClick={() => signOut()}>
                パスワードを忘れた場合
              </div>
              <button className={styles.btn_login_mail} onClick={() => signup()}>
                メールアドレスで登録
                <span>
                  <Mail />
                </span>
              </button>
            </div>
          </div>

          <div className={styles.terms}>
            <u>利用規約</u>、<u>プライバシーポリシー</u>に同意の上ご利用ください。
          </div>
        </div>
      </main>
    </>
  )
}

export default LoginGate
