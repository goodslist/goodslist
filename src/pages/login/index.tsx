import styles from '../../styles/Login.module.css'
import Twitter from '../../../public/images/twitter.svg'
import Line from '../../../public/images/line.svg'
import Mail from '../../../public/images/mail.svg'
import Password from '../../../public/images/password.svg'
import { AuthContext } from '../../components/auth/AuthContext'
import { useState, useEffect, useRef, useCallback, useContext } from 'react'
import { supabase } from '../../components/supabase'
import { ModalContext } from '../../components/modal/ModalContext'
import Head from 'next/head'
import Navbar from '../../components/Navber'
import Link from 'next/dist/client/link'

export default function LogIn() {
  const { user, session, signOut }: any = useContext(AuthContext)

  const {
    openModalFlag,
    setOpenModalFlag,
    modalType,
    openModalContentFlag,
    setOpenModalContentFlag,
    setShowLogin,
  }: any = useContext(ModalContext)

  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [errorEmail, setErrorEmail] = useState('　')
  const [errorPassword, setErrorPassword] = useState('　')
  const [checkEmail, setCheckEmail] = useState(false)
  const [checkPassword, setCheckPassword] = useState(false)

  let createErrorEmail = '　'
  let createErrorPassword = '　'

  //メールアドレス入力のエラーチェック
  useEffect(() => {
    createErrorEmail = '　'
    if (email.length > 0) {
      if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/)) {
        createErrorEmail = createErrorEmail + 'メールアドレスの形式で入力してください。'
      }
      if (email.length > 257) {
        createErrorEmail = createErrorEmail + '256文字以下で入力してください。'
      }
      setErrorEmail(createErrorEmail)
      if (createErrorEmail == '　') setCheckEmail(true)
      else setCheckEmail(false)
    } else {
      createErrorEmail = '　'
      setErrorEmail(createErrorEmail)
    }
  }, [email])

  //パスワード入力のエラーチェック
  useEffect(() => {
    createErrorPassword = '　'
    if (password.length > 0) {
      if (!password.match(/^[A-Za-z0-9]*$/)) {
        createErrorPassword = createErrorPassword + '半角英数字で入力してください。'
      }
      if (password.length < 8 || password.length > 32) {
        createErrorPassword = createErrorPassword + '8文字以上32文字以下で入力してください。'
      }
      setErrorPassword(createErrorPassword)
      if (createErrorPassword == '　') setCheckPassword(true)
      else setCheckPassword(false)
    } else {
      createErrorPassword = '　'
      setErrorPassword(createErrorPassword)
    }
  }, [password])

  const login = async () => {
    const { error, data } = await supabase.auth.signIn({ email, password })
    if (error) {
      console.log({ error })
    } else {
      console.log({ data })
    }
  }

  return (
    <>
      <Head>
        <title>Goodsist イベントのグッズ代が計算できるWEBアプリ</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width,initial-scale=1.0,maximum-scale=1.0' />
        <link rel='icon' href='/favicon.ico' />
        <link
          href='https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap&text=Goodsist'
          rel='stylesheet'
        />
      </Head>

      <Navbar />
      <main className={styles.main}>
        <div className={styles.content_title}>
          <span>ログイン</span>
        </div>
        <div className={styles.login_signup_form_container}>
          <div className={styles.form_login_sns}>
            <div className={styles.form_header_sns}>SNSでログイン</div>
            <button className={styles.btn_login_twitter}>
              Twitterでログイン
              <span>
                <Twitter />
              </span>
            </button>
            <button className={styles.btn_login_line}>
              LINEでログイン
              <span>
                <Line />
              </span>
            </button>
            {/* <button className={styles.btn_login_yahoo}>
              Yahoo! JAPAN
              <span>
                <img src='../../images/yahoo.png' width='35px' height='35px' />
              </span>
            </button>
            <button className={styles.btn_login_google}>
              Google
              <span>
                <img src='../../images/google.svg' width='26px' height='26px' />
              </span>
            </button> */}
          </div>
          <div className={styles.form_login_mail}>
            <div className={styles.form_header_mail}>メールでログイン</div>
            <span className={styles.input_mail_container}>
              <input
                className={styles.input_mail}
                type='text'
                name='email'
                placeholder='メールアドレス'
                onChange={(e) => setEmail(e.target.value)}
              />
              <span>
                <Mail />
              </span>
            </span>
            <div className={styles.input_error}>{errorEmail}</div>
            <span className={styles.input_password_container}>
              <input
                className={styles.input_password}
                type='password'
                name='password'
                placeholder='パスワード'
                onChange={(e) => setPassword(e.target.value)}
              />
              <span>
                <Password />
              </span>
            </span>
            <div className={styles.input_error}>{errorPassword}</div>
            <div className={styles.forgot_password} onClick={() => signOut()}>
              パスワードを忘れた場合
            </div>
            <button
              className={
                checkEmail && checkPassword ? styles.btn_login_mail_active : styles.btn_login_mail
              }
              onClick={() => login()}
            >
              メールアドレスでログイン
              <span>
                <Mail />
              </span>
            </button>
            <Link href='/signup'>
              <a>
                <button className={styles.btn_link_signup}>会員登録はこちら</button>
              </a>
            </Link>
            {/* <button className={styles.btn_login_mail} onClick={() => signup()}>
            メールアドレスで登録
            <span>
              <Mail />
            </span>
          </button> */}
          </div>
        </div>
      </main>
    </>
  )
}
