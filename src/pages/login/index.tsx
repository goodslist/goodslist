import Link from 'next/link'
import React from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useState, useEffect, useRef, useCallback, useContext } from 'react'
import { supabase } from '../../components/supabase'
import styles from '../../styles/Login.module.css'
import { InferGetStaticPropsType, GetStaticPropsContext } from 'next'
import Icon_witter from '../img/icon_twitter.svg'
import Navbar from '../../components/Navber'

type Props = InferGetStaticPropsType<typeof getStaticProps>

export const getStaticProps = async (context: GetStaticPropsContext) => {
  const data = 'テスト'

  return {
    props: { data },
  }
}

const LoginGate = (data: Props) => {
  const [selectLogin, setSelectLogin] = useState([
    styles.select_login_active,
    styles.select_register,
    styles.select_underbar_login,
  ])

  const changeSelectLogin = (select: string) => {
    if (select == 'register') {
      const newSelectLogin = [
        styles.select_login,
        styles.select_register_active,
        styles.select_underbar_register,
      ]
      setSelectLogin(newSelectLogin)
    } else if (select == 'login') {
      const newSelectLogin = [
        styles.select_login_active,
        styles.select_register,
        styles.select_underbar_login,
      ]
      setSelectLogin(newSelectLogin)
    }
  }
  return (
    <>
      <Head>
        <title>Goodsist イベントのグッズ代が計算できるWEBアプリ</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width' />
        <link rel='icon' href='/favicon.ico' />
        <link
          href='https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap&text=Goodsist'
          rel='stylesheet'
        />
      </Head>

      <Navbar />
      <main className={styles.main}>
        <div className={styles.card}>
          <div className={styles.select_login_container}>
            <button className={selectLogin[0]} onClick={() => changeSelectLogin('login')}>
              ログイン
            </button>
            <button className={selectLogin[1]} onClick={() => changeSelectLogin('register')}>
              新規登録
            </button>
          </div>
          <div className={styles.select_underbar_container}>
            <div className={selectLogin[2]}></div>
          </div>
          <div className={styles.btn_container}>
            <div className={styles.terms}>利用規約に同意の上ご利用ください。</div>
            <button className={styles.btn_login_twitter}>Twitterでログイン</button>
            <button className={styles.btn_login_line}>LINEでログイン</button>
            <button className={styles.btn_login_google}>Googleでログイン</button>
            <button className={styles.btn_login_yahoo}>Yahoo! JAPANでログイン</button>
            <hr className={styles.space_bar} />
            <input className={styles.input_mail} type='text' placeholder='メールアドレス' />
            <input className={styles.input_password} type='password' placeholder='パスワード' />
            <button className={styles.btn_login_mail}>メールアドレスでログイン</button>
          </div>
        </div>
      </main>
    </>
  )
}

export default LoginGate

// 本来は、ここで外部 API などを呼び出してデータを取得する

// const { data, error } = await supabase
//   .from('goods')
//   .select(
//     'goods_id, goods_name, goods_group, goods_type, color, size, price, events(event_id, event_name, first_date, url, contents(content_id, content_name))',
//   )
//   .eq('event_id', event_id)

// const goodsList: Goods[] = []
// data?.map((doc) => {
//   const goods: Goods = {
//     content_id: doc.events.contents.content_id,
//     content_name: doc.events.contents.content_name,
//     event_id: doc.events.event_id,
//     event_name: doc.events.event_name,
//     first_date: doc.events.first_date,
//     url: doc.events.url,
//     goods_id: doc.goods_id,
//     goods_name: doc.goods_name,
//     goods_group: doc.goods_group,
//     goods_type: doc.goods_type,
//     color: doc.color,
//     size: doc.size,
//     price: doc.price,
//     goods_count: 0,
//   }
//   goodsList.push(goods)
// })
